version: '3.8'
services:
  # python + poetry + gunicorn + psycopg2-binary + environs[django] + django + сайт
  webapp:
    build: .
    depends_on:
      - db
    volumes:
      - .:/code
    environment:
      - "DJANGO_SECRET_KEY=remove_this_code_and_pass_new"
      - "DJANGO_DEBUG=False"
      # - "DJANGO_SECURE_SSL_REDIRECT="
      # - "DJANGO_SECURE_HSTS_SECONDS="
      # - "DJANGO_SECURE_HSTS_INCLUDE_SUBDOMAINS="
      # - "DJANGO_SECURE_HSTS_PRELOAD="
      # - "DJANGO_SESSION_COOKIE_SECURE="
      # - "DJANGO_CSRF_COOKIE_SECURE="
      # # данные для почтового сервера для подтверждения регистрации
      # - "DJANGO_EMAIL_HOST_PASSWORD="
      # - "DJANGO_EMAIL_HOST_USER="
    # command: gunicorn config.wsgi -b 0.0.0.0:8000
    command: python3 /code/manage.py runserver 0.0.0.0:8000

  db:
    build: './deploy/build/db'
    # volumes:
    #   - postgres_data:/var/lib/postgresql/data/
    environment:
      - "POSTGRES_PASSWORD=postgres"
      - "POSTGRES_USER=postgres"
      - "POSTGRES_DB=postgres"

  nginx:
    build: './deploy/build/nginx'
    depends_on:
      - webapp
    volumes:
      - ./deploy/log/nginx:/var/log/nginx #log файлы.
      - ./deploy/conf/nginx/nginx.conf:/etc/nginx/nginx.conf:ro #Конфигурация nginx.
      - ./deploy/conf/nginx/conf.d:/etc/nginx/conf.d:ro #Конфигурация nginx, более ручная
      - ./deploy/conf/nginx/ssl:/etc/nginx/ssl:ro #сертификаты
    ports:
      - 80:80
# volumes:
#   postgres_data:
